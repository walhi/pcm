#ifndef Q_CORRECTION_H
#define Q_CORRECTION_H

#include <cstdint>
const uint16_t T[14] = {
  0b10000000000000,
  0b00000000000001,
  0b00000000000010,
  0b00000000000100,
  0b00000000001000,
  0b00000000010000,
  0b00000000100000,
  0b00000001000000,
  0b10000010000000,
  0b00000100000000,
  0b00001000000000,
  0b00010000000000,
  0b00100000000000,
  0b01000000000000,
};

// T^{-6}
const uint16_t T_m6[14] = {
  0b00000001000000,
  0b00000010000000,
  0b00000100000001,
  0b00001000000010,
  0b00010000000100,
  0b00100000001000,
  0b01000000010000,
  0b10000000100000,
  0b00000000000001,
  0b00000000000010,
  0b00000000000100,
  0b00000000001000,
  0b00000000010000,
  0b00000000100000,
};

// T^{-5}
const uint16_t T_m5[14] = {
  0b00000000100000,
  0b00000001000000,
  0b00000010000000,
  0b00000100000001,
  0b00001000000010,
  0b00010000000100,
  0b00100000001000,
  0b01000000010000,
  0b10000000000000,
  0b00000000000001,
  0b00000000000010,
  0b00000000000100,
  0b00000000001000,
  0b00000000010000,
};

// T^{-4}
const uint16_t T_m4[14] = {
  0b00000000010000,
  0b00000000100000,
  0b00000001000000,
  0b00000010000000,
  0b00000100000001,
  0b00001000000010,
  0b00010000000100,
  0b00100000001000,
  0b01000000000000,
  0b10000000000000,
  0b00000000000001,
  0b00000000000010,
  0b00000000000100,
  0b00000000001000,
};

// T^{-3}
const uint16_t T_m3[14] = {
  0b00000000001000,
  0b00000000010000,
  0b00000000100000,
  0b00000001000000,
  0b00000010000000,
  0b00000100000001,
  0b00001000000010,
  0b00010000000100,
  0b00100000000000,
  0b01000000000000,
  0b10000000000000,
  0b00000000000001,
  0b00000000000010,
  0b00000000000100,
};

// T^{-2}
const uint16_t T_m2[14] = {
  0b00000000000100,
  0b00000000001000,
  0b00000000010000,
  0b00000000100000,
  0b00000001000000,
  0b00000010000000,
  0b00000100000001,
  0b00001000000010,
  0b00010000000000,
  0b00100000000000,
  0b01000000000000,
  0b10000000000000,
  0b00000000000001,
  0b00000000000010,
};


// T^{-1}
const uint16_t T_m1[14] = {
  0b00000000000010,
  0b00000000000100,
  0b00000000001000,
  0b00000000010000,
  0b00000000100000,
  0b00000001000000,
  0b00000010000000,
  0b00000100000001,
  0b00001000000000,
  0b00010000000000,
  0b00100000000000,
  0b01000000000000,
  0b10000000000000,
  0b00000000000001,
};


// (T+I)^{-1}
const uint16_t T_I_m1[14] = {
  0b11111111111110,
  0b11111111111100,
  0b11111111111000,
  0b11111111110000,
  0b11111111100000,
  0b11111111000000,
  0b11111110000000,
  0b11111100000000,
  0b00000111111111,
  0b00001111111111,
  0b00011111111111,
  0b00111111111111,
  0b01111111111111,
  0b11111111111111,
};

//(T^{2}+I)^{-1}
const uint16_t T2_I_m1[14] = {
  0b01010101010100,
  0b10101010101000,
  0b01010101010000,
  0b10101010100000,
  0b01010101000000,
  0b10101010000000,
  0b01010100000000,
  0b10101000000000,
  0b00000101010101,
  0b00001010101010,
  0b00010101010101,
  0b00101010101010,
  0b01010101010101,
  0b10101010101010,
};

// (T^{3}+I)^{-1}
const uint16_t T3_I_m1[14] = {
  0b01001001001000,
  0b10010010010000,
  0b00100100100000,
  0b01001001000000,
  0b10010010000000,
  0b00100100000000,
  0b01001000000000,
  0b10010000000000,
  0b01101001001001,
  0b11010010010010,
  0b10100100100100,
  0b01001001001001,
  0b10010010010010,
  0b00100100100100,
};

// (T^{4}+I)^{-1}
const uint16_t T4_I_m1[14] = {
  0b00010001000101,
  0b00100010001010,
  0b01000100010101,
  0b10001000101010,
  0b00010001010101,
  0b00100010101010,
  0b01000101010101,
  0b10001010101010,
  0b00000100010001,
  0b00001000100010,
  0b00010001000100,
  0b00100010001000,
  0b01000100010001,
  0b10001000100010,
};

// (T^{5}+I)^{-1}
const uint16_t T5_I_m1[14] = {
  0b01101011010111,
  0b11010110101111,
  0b10101101011110,
  0b01011010111101,
  0b10110101111011,
  0b01101011110111,
  0b11010111101111,
  0b10101111011110,
  0b00110101101011,
  0b01101011010110,
  0b11010110101101,
  0b10101101011010,
  0b01011010110101,
  0b10110101101011,
};


uint16_t qCorMul(const uint16_t *m, uint16_t v);

// T^{x} * Sample
uint16_t qCorTS(uint8_t x, uint16_t s);

#endif
